activity_labels = '\DataSet\activity_labels.txt'
activity_labels = '/DataSet/activity_labels.txt'
act_lbl = read.delim(activity_labels, header = F, sep="\n")
act_lbl = read.delim(activity_labels, header = F, sep="\n")
activity_labels = 'DataSet/activity_labels.txt'
act_lbl = read.delim(activity_labels, header = F, sep="\n")
act_lbl
act_lbl = read.csv(activity_labels, header = F)
act_lbl
act_lbl = read.table(activity_labels, header = F, sep = " ")
act_lbl
activity_labels.txt     = 'DataSet/activity_labels.txt'
features.txt            = 'DataSet/features.txt'
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
feat = read.table(features.txt, header = F, sep = " ")
head(feat)
match('mean',feat)
match(c('mean'),feat)
match(list('mean'),feat)
match('a','bba')
feat
'sum' %in% feat
'sum' %in% feat[,2]
feat[,2]
class(feat[,2])
class(feat[1,2])
feat = read.table(features.txt, header = F, sep = " ", stringAsFactors = F)
feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
class(feat[1,2])
'sum' %in% feat[,2]
match('a','bba')
match(list('mean'),feat)
match(list('mean'),feat[,2])
match('mean',feat[,2])
result = match('mean',feat[,2])
result[2]
result[1]
match('mean','e')
match('mean','mean')
greg()
grep(pattern = '(-mean)|(-std)', x = c('mean','-mean','abc','abc'))
grep(pattern = '(-mean)|(-std)', x = c('mean','-mean','-mean','abc'))
grep(pattern = '(-mean)|(-std)', x = c('mean','-mean','-mean','std'))
grep(pattern = '(-mean)|(-std)', x = c('mean','-mean','-mean','-std'))
grep(pattern = '(-mean)|(-std)', x = all_feat[,2])
all_feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
grep(pattern = '(-mean)|(-std)', x = all_feat[,2])
feat_pattern = '(-mean([:upper:]|\())|(-std([:upper:]|\())
feat_pattern = '(-mean([:upper:]|\())|(-std([:upper:]|\())'
feat_pattern = '(-mean([:upper:]|\x28))|(-std([:upper:]|\x28))'
grep(pattern = feat_pattern, x = all_feat[,2])
print('\x28')
feat_pattern = '(-mean([:upper:]|\\x28))|(-std([:upper:]|\\x28))'
grep(pattern = feat_pattern, x = all_feat[,2])
feat_pattern = '-(mean|std)([:upper:]|\\x28))'
feat_pattern = '-(mean|std)([:upper:]|\\x28))'
grep(pattern = feat_pattern, x = all_feat[,2])
grep(pattern = '(-mean)|(-std)', x = all_feat[,2])
pat = '[:upper:]'
grep(pat,'D')
grep(pat,'E')
grep(pat,'e')
grep(pat,c('e','E','x','y','Z')
d
grep(pat,c('e','E','x','y','Z'))
pat
grep('[:upper:]',c('e','E','x','y','Z'))
grep('[:lower:]',c('e','E','x','y','Z'))
grep('[a-z]',c('e','E','x','y','Z'))
grep('[A-Z]',c('e','E','x','y','Z'))
feat_pattern = '-(mean|std)([A-Z]|\\x28))'
feat = grep(pattern = feat_pattern, x = all_feat[,2])
feat
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat_pattern = '-(mean|std)([A-Z]|\\x28))'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat
feat_pattern = '-(mean|std)([A-Z]|\\x28)'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat_idx
grep(pattern = '(-mean)|(-std)', x = all_feat[,2])
# Locations of relevent files
activity_labels.txt     = 'DataSet/activity_labels.txt'
features.txt            = 'DataSet/features.txt'
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
all_feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern = '-(mean|std)([A-Z]|\\x28)'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat_idx
feat_idx = all_feat[grep(pattern = feat_pattern, x = all_feat[,2]),1]
feat_idx
all_feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern = '-(mean|std)([A-Z]|\\x28)'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat = all_feat[feat_idx,]
head(feat)
feat(tail)
tail(feat)
# Locations of relevant files
activity_labels.txt      = 'DataSet/activity_labels.txt'
features.txt             = 'DataSet/features.txt'
subject_train.txt        = 'DataSet/train/subject_train.txt'
X_train.txt              = 'DataSet/train/X_train.txt'
y_train.txt              = 'DataSet/train/y_train.txt'
subject_test.txt         = 'DataSet/test/subject_test.txt'
X_test.txt               = 'DataSet/test/X_test.txt'
y_test.txt               = 'DataSet/test/y_test.txt'
#--------------------------------------------------------------------------------------------------------------
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
all_feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern = '-(mean|std)([A-Z]|\\x28)'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat = all_feat[feat_idx,]
measures_train = read.table(X_train.txt, header = F, sep = " ")
measures_train = read.csv(X_train.txt, header = F, sep = " ")
head(measures_train)
measures_train = read.table(X_train.txt, header = F)
head(measures_train)
measures_train = read.table2(X_train.txt, header = F)
measures_train(1:6,c(1:3, 559:561))
measures_train[1:6,c(1:3, 559:561)]
colClasses = rep('NULL',length(all_feat))
colClasses
colClasses = rep('NULL',nrow(all_feat))
colClasses
colClasses[feat[,1]] = rep('character',nrow(feat))
colClasses
feat
colClasses
colClasses = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('character',nrow(feat))
measures_train = read.table(X_train.txt, header = F,col.names = all_feat[,2],colClasses = colClasses)
measures_train[1:6,c(1:3, 559:561)]
measures_train = read.table(X_train.txt, header = F,colClasses = colClasses)
measures_train[1:6,c(1:3, 559:561)]
measures_train[1:6,c(1:3)]
measures_train = read.table(X_train.txt, header = F,col.names = all_feat[[,2]],colClasses = colClasses)
measures_train = read.table(X_train.txt, header = F,col.names = all_feat[,2],colClasses = colClasses)
head(measures_train)
measures_train[1:6,]
measures_train[1:6,]
measures_train[1:6,1]
measures_train[1:6,c(1,2)]
measures_train[1:6,c(1:10)]
# Locations of relevant files
activity_labels.txt      = 'DataSet/activity_labels.txt'
features.txt             = 'DataSet/features.txt'
subject_train.txt        = 'DataSet/train/subject_train.txt'
X_train.txt              = 'DataSet/train/X_train.txt'
y_train.txt              = 'DataSet/train/y_train.txt'
subject_test.txt         = 'DataSet/test/subject_test.txt'
X_test.txt               = 'DataSet/test/X_test.txt'
y_test.txt               = 'DataSet/test/y_test.txt'
#--------------------------------------------------------------------------------------------------------------
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
all_feat = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern = '-(mean|std)([A-Z]|\\x28)'
feat_idx = grep(pattern = feat_pattern, x = all_feat[,2])
feat = all_feat[feat_idx,]
colClasses = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('character',nrow(feat))
col.names = all_feat[,2]
measures_train = read.table(X_train.txt, header = F, col.names = col.names ,colClasses = colClasses)
measures_train[1:6,c(1:10)]
nrow(test)
colClasses = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('character',nrow(feat))
col.names = all_feat[,2]
train = read.table(X_train.txt, header = F, col.names = col.names ,colClasses = colClasses)
test  = read.table(X_test.txt , header = F, col.names = col.names ,colClasses = colClasses)
nrow(train)
nrow(test)
colClasses = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('character',nrow(feat))
col.names = all_feat[,2]
measures_train = read.table(X_train.txt, header = F, col.names = col.names ,colClasses = colClasses)
measures_test  = read.table(X_test.txt , header = F, col.names = col.names ,colClasses = colClasses)
act_lbl
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
activity_labels.txt      = 'DataSet/activity_labels.txt'
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
act_lbl
activities_train = read.table(y_train.txt,header = F, col.names = 'ACTIVITY')
activity_labels.txt      = 'DataSet/activity_labels.txt'
features.txt             = 'DataSet/features.txt'
subject_train.txt        = 'DataSet/train/subject_train.txt'
X_train.txt              = 'DataSet/train/X_train.txt'
y_train.txt              = 'DataSet/train/y_train.txt'
subject_test.txt         = 'DataSet/test/subject_test.txt'
X_test.txt               = 'DataSet/test/X_test.txt'
y_test.txt               = 'DataSet/test/y_test.txt'
activities_train = read.table(y_train.txt,header = F, col.names = 'ACTIVITY')
activities_train
class(activities_train)
class(activities_train[1])
class(activities_train[[1])
class(activities_train[[1]])
as.factor(x = activities_train[[1]])
activities_train = as.factor(activities_train[[1]])
activities_train
activities_train.levels
factor(c(1,2,3,4,5))
factor(c(1,2,3,4,5),levels = c('one','two','three','four','five'))
factor(c(1,2,3,4,5),levels = c(1,2,3,4,5), labels = c('one','two','three','four','five'))
factor(c(1,2,3,5,5),levels = c(1,2,3,4,5), labels = c('one','two','three','four','five'))
act_lbl
activities_train = read.table(y_train.txt,header = F, col.names = 'ACTIVITY')
activities_train
head(activities_train)
activities_train[1] = factor(activities_train, levels = act_lbl[,1], labels = act_lbl[,2])
activities_train
activities_train[1] = factor(activities_train[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
activities_train
activities_train[[1]]
activities_train = read.table(y_train.txt,header = F, col.names = 'ACTIVITY')
activities_train[1] = factor(activities_train[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
activities_train[[1]]
head(activities_train)
tail(activities_train)
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
activities_train = read.table(y_train.txt,header = F, col.names = 'ACTIVITY')
activities_train[1] = factor(activities_train[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
activities_test = read.table(y_test.txt,header = F, col.names = 'ACTIVITY')
activities_test[1] = factor(activities_test[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
tail(activities_test)
activities_test[c(2928,2929),]
activities_test[c(2928,2929),1]
subjects_train = read.table(subject_train.txt, header = F, col.names = 'SUBJECT')
head(subjects_train)
# Locations of relevant files
activity_labels.txt      = 'DataSet/activity_labels.txt'
features.txt             = 'DataSet/features.txt'
subject_train.txt        = 'DataSet/train/subject_train.txt'
X_train.txt              = 'DataSet/train/X_train.txt'
y_train.txt              = 'DataSet/train/y_train.txt'
subject_test.txt         = 'DataSet/test/subject_test.txt'
X_test.txt               = 'DataSet/test/X_test.txt'
y_test.txt               = 'DataSet/test/y_test.txt'
#--------------------------------------------------------------------------------------------------------------
all_feat       = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern   = '-(mean|std)([A-Z]|\\x28)'
feat_idx       = grep(pattern = feat_pattern, x = all_feat[,2])
feat           = all_feat[feat_idx,]
colClasses = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('character',nrow(feat))
col.names = all_feat[,2]
measures_train = read.table(X_train.txt, header = F, col.names = col.names ,colClasses = colClasses)
measures_test  = read.table(X_test.txt , header = F, col.names = col.names ,colClasses = colClasses)
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
activities_train    = read.table(y_train.txt, header = F, col.names = 'ACTIVITY')
activities_train[1] = factor(activities_train[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
activities_test     = read.table(y_test.txt , header = F, col.names = 'ACTIVITY')
activities_test[1]  = factor(activities_test[[1]] , levels = act_lbl[,1], labels = act_lbl[,2])
subjects_train = read.table(subject_train.txt, header = F, col.names = 'SUBJECT')
subjects_test  = read.table(subject_test.txt , header = F, col.names = 'SUBJECT')
train = cbind(subjects_train,activities_train,measures_train)
head(train,1)
tail(train,1)
rawData  = rbind(train,test)
test     = cbind(subjects_test ,activities_test ,measures_test )
rawData  = rbind(train,test)
nrow(rawData)
nrow(train) + nrow(test)
# Locations of relevant files
activity_labels.txt      = 'DataSet/activity_labels.txt'
features.txt             = 'DataSet/features.txt'
subject_train.txt        = 'DataSet/train/subject_train.txt'
X_train.txt              = 'DataSet/train/X_train.txt'
y_train.txt              = 'DataSet/train/y_train.txt'
subject_test.txt         = 'DataSet/test/subject_test.txt'
X_test.txt               = 'DataSet/test/X_test.txt'
y_test.txt               = 'DataSet/test/y_test.txt'
#--------------------------------------------------------------------------------------------------------------
all_feat       = read.table(features.txt, header = F, sep = " ", stringsAsFactors = F)
feat_pattern   = '-(mean|std)([A-Z]|\\x28)'
feat_idx       = grep(pattern = feat_pattern, x = all_feat[,2])
feat           = all_feat[feat_idx,]
colClasses           = rep('NULL',nrow(all_feat))
colClasses[feat[,1]] = rep('numeric',nrow(feat))
col.names = all_feat[,2]
measures_train = read.table(X_train.txt, header = F, col.names = col.names ,colClasses = colClasses)
measures_test  = read.table(X_test.txt , header = F, col.names = col.names ,colClasses = colClasses)
act_lbl = read.table(activity_labels.txt, header = F, sep = " ")
activities_train    = read.table(y_train.txt, header = F, col.names = 'ACTIVITY')
activities_train[1] = factor(activities_train[[1]], levels = act_lbl[,1], labels = act_lbl[,2])
activities_test     = read.table(y_test.txt , header = F, col.names = 'ACTIVITY')
activities_test[1]  = factor(activities_test[[1]] , levels = act_lbl[,1], labels = act_lbl[,2])
subjects_train = read.table(subject_train.txt, header = F, col.names = 'SUBJECT')
subjects_test  = read.table(subject_test.txt , header = F, col.names = 'SUBJECT')
train    = cbind(subjects_train,activities_train,measures_train)
test     = cbind(subjects_test ,activities_test ,measures_test )
rawData  = rbind(train,test)
rawData[1,3]
class(rawData[1,3])
class(rawData[1,5])
rawData[1,10]
head(rawData)
rawData[,3:]
rawData[,3:?]
rawData[,3]
rawData[,3:.]
rawData[,3::]
rawData[,:3]
rawData[,3:length(rawData)]
rawData[1,3:length(rawData)]
rawData[1,2:length(rawData)]
split(rawData,rawData[,1:2])
splitData = split(rawData,rawData[,1:2])
splitData[1,]
splitData[1]
splitData[1]
splitData[1][1]
head(splitData[1],1)
class(splitData[1],1)
class(splitData[1]
)
class(splitData[[1]])
head(splitData[[1]])
tail(splitData[[1]])
sample = splitData[[1]][1,]
sample
sample = splitData[[1]][,]
sample
sample
splitData[[1]][,1]
splitData[[1]][,2]
splitData[[1]][,3]
splitData[[1]]
head(splitData[[1]])
head(splitData[[1]])
sample = splitData[[1]][,1:3]
sample
sample = splitData[[2]][,1:3]
sample
sample = splitData[[20]][,1:3]
sample
sample = splitData[[21]][,1:3]
sample
sample = splitData[[100]][,1:3]
sample
sample = splitData[[101]][,1:3]
sample
mean(sample)
mean(sample[,3])
mean(sample[,3:4])
sample = splitData[[101]][,1:4]
mean(sample[,3:4])
colMeans(sample[,3:4])
colMeans(sample[,1:4])
colMeans(sample[,2:4])
colMeans(sample[,3:4])
colMeans(sample,dims = 3:4)
colMeans(sample,dims = 3:dims)
colMeans(sample,dims = 3:length(sample))
colMeans(sample, m = 3)
.colMeans(sample, m = 3)
.colMeans(sample, n = 3)
.colMeans(sample, n = 3, m = nrow(sample))
.colMeans(sample, n = 3:length(sample), m = nrow(sample))
.colMeans(sample[,3:length(sample)])
colMeans(sample[,3:length(sample)])
sample = splitData[[101]][,1:6]
colMeans(sample[,3:length(sample)])
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
group[1,1:2]
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
getAverageMeasures(sample)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
getAverageMeasures(sample)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
debugSource('~/GitHub/GettingAndCleaningData/run_analysis.R')
means
debugSource('~/GitHub/GettingAndCleaningData/run_analysis.R')
means
e
q
q
sample[1,1:2]
sample[[1,1:2]]
sample[1,1:2]
cbind(sample[1,1:2],sample[2,3])
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
getAverageMeasures(sample)
colMeans(group[,3:length(group)])
group = splitData[[101]][,1:6]
colMeans(group[,3:length(group)])
class(colMeans(group[,3:length(group)]))
data.frame(colMeans(group[,3:length(group)])
d
data.frame(colMeans(group[,3:length(group)]))
cbind(group[1,1:2],colMeans(group[,3:length(group)]))
rbind(group[1,1:2],colMeans(group[,3:length(group)]))
cbind(group[1,1:2],colMeans(group[,3:length(group)]))
means = colMeans(group[,3:length(group)])
means = colMeans(group[,3:length(group)])
means
as.data.frame(means,optional = T)
as.data.frame(means,optional = F)
t(means)
cbind(group[1,1:2],t(colMeans(group[,3:length(group)]))
cbind(group[1,1:2],t(colMeans(group[,3:length(group)])))
cbind(group[1,1:2],t(colMeans(group[,3:length(group)])))
sample = splitData[[101]][,1:6]
getAverageMeasures  <- function(group) {
means = colMeans(group[,3:length(group)])
cbind(group[1,1:2],t(means))
}
getAverageMeasures(sample)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
getAverageMeasures(sample)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
getAverageMeasures(sample)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
printf(getAverageMeasures(sample))
print(getAverageMeasures(sample))
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
processedData = do.call('rbind',lapply(splitData,getAverageMeasures))
head(processedData)
print(processedData)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
print(processedData[1:10,1:5])
print(processedData[1:30,1:5])
print(processedData[1:31,1:5])
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
processedData
head(processedData)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
head(data)
write.table(data,file = 'tidy_data_set.txt')
temp = read.table('tidy_data_set.txt')
temp
head(temp)
getAverageMeasures  <- function(group) {
means = colMeans(group[,3:length(group)])
cbind(group[1,1:2],t(means))
}
data  = rbind(train,test)
data  = split(data,data[,1:2])
data  = lapply(data,getAverageMeasures)
data  = do.call('rbind',data)
row.names(data) = NULL
write.table(data,file = 'tidy_data_set.txt')
temp = read.table('tidy_data_set.txt')
head(temp)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
write.table(data,file = 'tidy_data_set.txt', row.names = F)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
data
train
col.names(train)
train[,1]
train[1,1]
train,1:3
train[],1:3]
train[,1:3]
train[2,1:3]
train[2,1:5]
col.names
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
col.names
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
col.names(data)
colnames(data)
colnames(subject_test)
colnames(subject_test)
colnames(activities_train)
colnames(measures_train)
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
source('~/GitHub/GettingAndCleaningData/run_analysis.R')
